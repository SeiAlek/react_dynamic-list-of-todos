{"version":3,"sources":["api/getTodos.tsx","components/TodoList/TodoItem.tsx","components/Button/Button.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["getData","url","a","fetch","response","json","getTodos","todos","users","map","todo","user","find","id","userId","preparedTodos","TodoItem","className","cn","completed","username","title","Button","text","handleClick","type","onClick","TodoList","SORT_BUTTONS","handleSortButton","button","key","name","field","SORT_FIELDS","App","state","sortField","sortReverse","isLoading","isLoaded","loadGoods","setState","then","finally","reversStatus","sortTodos","sortDirection","sort","b","aField","bField","Number","localeCompare","this","sortedTodos","max","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfae9c41.chunk.js","sourcesContent":["import { Todo, User } from '../components/Interfaces';\n\nconst API_URL_TODOS = 'https://jsonplaceholder.typicode.com/todos';\nconst API_URL_USERS = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getTodos = async () => {\n  const todos: Todo[] = await getData(API_URL_TODOS);\n  const users: User[] = await getData(API_URL_USERS);\n\n  const preparedTodos = await todos.map((todo) => {\n    return {\n      ...todo,\n      user: users.find((user) => user.id === todo.userId),\n    };\n  });\n\n  return preparedTodos;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../Interfaces';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n}) => (\n  <tr className={cn({ 'is-selected': todo.completed })}>\n    <td>\n      {todo.id}\n    </td>\n    <td>\n      {todo.user.username}\n    </td>\n    <td>\n      {todo.title}\n    </td>\n    <td>\n      {todo.completed && 'Completed'}\n    </td>\n  </tr>\n);\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  className: string;\n  handleClick: () => void;\n}\n\nexport const Button: React.FC<Props> = ({\n  text,\n  className,\n  handleClick,\n}) => (\n  <button type=\"button\" className={className} onClick={handleClick}>\n    {text}\n  </button>\n);\n","import React from 'react';\nimport { Todo, SortButton } from '../Interfaces';\nimport { TodoItem } from './TodoItem';\nimport { Button } from '../Button';\n\ninterface Props {\n  todos: Todo[];\n  SORT_BUTTONS: SortButton[];\n  handleSortButton: (type: string) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, SORT_BUTTONS, handleSortButton }) => (\n  <table className=\"table\">\n    <thead>\n      <tr>\n        {SORT_BUTTONS.map((button) => (\n          <th key={button.name} className=\"bd-callout is-primary\">\n            <Button\n              text={button.name}\n              className=\"button is-primary is-inverted is-outlined is-medium is-fullwidth\"\n              handleClick={() => handleSortButton(button.field)}\n            />\n          </th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map((todo) => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Todo, SortFields, SortButton } from './components/Interfaces';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { Button } from './components/Button';\n\ninterface State {\n  todos: Todo[];\n  sortField: string;\n  sortReverse: boolean;\n  isLoading: boolean;\n  isLoaded: boolean;\n}\nconst SORT_FIELDS: SortFields = {\n  id: 'id',\n  name: 'username',\n  title: 'title',\n  completed: 'completed',\n};\nconst SORT_BUTTONS: SortButton[] = [\n  {\n    name: 'Id',\n    field: SORT_FIELDS.id,\n  },\n  {\n    name: 'Name',\n    field: SORT_FIELDS.name,\n  },\n  {\n    name: 'Title',\n    field: SORT_FIELDS.title,\n  },\n  {\n    name: 'Completed',\n    field: SORT_FIELDS.completed,\n  },\n];\n\nclass App extends Component {\n  state: State = {\n    todos: [],\n    sortField: SORT_FIELDS.id,\n    sortReverse: false,\n    isLoading: false,\n    isLoaded: false,\n  };\n\n  loadGoods = () => {\n    this.setState({ isLoading: true });\n\n    getTodos()\n      .then(todos => this.setState({ todos, isLoaded: true }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleSortButton = (field: string) => {\n    const { sortField, sortReverse } = this.state;\n    const reversStatus = (sortField === field) ? !sortReverse : false;\n\n    this.setState(() => ({\n      sortField: field,\n      sortReverse: reversStatus,\n    }));\n  };\n\n  sortTodos = () => {\n    const { todos, sortField, sortReverse } = this.state;\n    const sortDirection = (sortReverse) ? -1 : 1;\n\n    return [...todos].sort((a: Todo, b: Todo): number => {\n      const aField = a[sortField] || a.user[sortField] || false;\n      const bField = b[sortField] || b.user[sortField] || false;\n\n\n      if (typeof aField === 'number') {\n        return (aField - (bField as number)) * sortDirection;\n      }\n\n      if (typeof aField === 'boolean') {\n        return (Number(aField) - Number(bField)) * -sortDirection;\n      }\n\n      if (typeof aField === 'string') {\n        return aField.localeCompare(bField as string) * sortDirection;\n      }\n\n      return 0;\n    });\n  };\n\n  render() {\n    const { isLoading, isLoaded } = this.state;\n    const sortedTodos: Todo[] = this.sortTodos();\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title is-1\">List of TODOs</h1>\n          {!isLoading && !isLoaded && (\n            <Button\n              text=\"Load ToDos\"\n              className=\"button\"\n              handleClick={this.loadGoods}\n            />\n          )}\n          {isLoading && <progress className=\"progress is-primary is-info\" max=\"100\" />}\n          {isLoaded && (\n            <TodoList\n              todos={sortedTodos}\n              SORT_BUTTONS={SORT_BUTTONS}\n              handleSortButton={this.handleSortButton}\n            />\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}