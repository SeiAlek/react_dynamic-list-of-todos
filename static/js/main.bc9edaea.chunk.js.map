{"version":3,"sources":["components/Enums.tsx","api/getTodos.tsx","components/TodoList/TodoItem.tsx","components/Button/Button.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["SortFields","API_URL","API_URL_TODOS","API_URL_USERS","getData","url","a","fetch","response","json","getTodos","Promise","all","todos","users","preparedTodos","map","todo","user","find","id","userId","TodoItem","className","cn","completed","username","title","Button","text","handleClick","type","onClick","TodoList","headers","handleSortButton","header","key","name","field","HEADERS","Id","Name","Title","Completed","App","useState","setTodos","sortField","setSortField","sortReverse","setSortReverse","isLoading","setIsLoading","isLoaded","setIsLoaded","hasError","setHasError","loadGoods","data","getSortField","b","sortDirection","localeCompare","Number","sortedTodos","sort","max","reverseStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc9edaea.chunk.js","sourcesContent":["export enum SortFields {\n  Id = 'id',\n  Name = 'username',\n  Title = 'title',\n  Completed = 'completed',\n}\n","const API_URL = 'https://seialek.github.io/react_dynamic-list-of-todos/api';\nconst API_URL_TODOS = `${API_URL}/todos.json`;\nconst API_URL_USERS = `${API_URL}/users.json`;\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getTodos = async () => {\n  const [todos, users] = await Promise.all([\n    getData(API_URL_TODOS),\n    getData(API_URL_USERS),\n  ]);\n\n  const preparedTodos = todos.map((todo: Todo) => {\n    return {\n      ...todo,\n      user: users.find((user: User) => user.id === todo.userId),\n    };\n  });\n\n  return preparedTodos;\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n}) => (\n  <tr className={cn({ 'is-selected': todo.completed })}>\n    <td>\n      {todo.id}\n    </td>\n    <td>\n      {todo.user.username}\n    </td>\n    <td>\n      {todo.title}\n    </td>\n    <td>\n      {todo.completed && 'Completed'}\n    </td>\n  </tr>\n);\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  className: string;\n  handleClick: () => void;\n}\n\nexport const Button: React.FC<Props> = ({\n  text,\n  className,\n  handleClick,\n}) => (\n  <button type=\"button\" className={className} onClick={handleClick}>\n    {text}\n  </button>\n);\n","import React from 'react';\nimport { TodoItem } from './TodoItem';\nimport { Button } from '../Button';\nimport { SortFields } from '../Enums';\n\ntype Props = {\n  todos: Todo[];\n  headers: SortButton[];\n  handleSortButton: (type: SortFields) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, headers, handleSortButton }) => (\n  <table className=\"table\">\n    <thead>\n      <tr>\n        {headers.map((header) => (\n          <th key={header.name} className=\"bd-callout is-primary\">\n            <Button\n              text={header.name}\n              className=\"button is-primary is-inverted is-outlined is-medium is-fullwidth\"\n              handleClick={() => handleSortButton(header.field)}\n            />\n          </th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map((todo) => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { Button } from './components/Button';\nimport { SortFields } from './components/Enums';\n\nconst HEADERS: SortButton[] = [\n  {\n    name: 'Id',\n    field: SortFields.Id,\n  },\n  {\n    name: 'Name',\n    field: SortFields.Name,\n  },\n  {\n    name: 'Title',\n    field: SortFields.Title,\n  },\n  {\n    name: 'Completed',\n    field: SortFields.Completed,\n  },\n];\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [sortField, setSortField] = useState(SortFields.Id);\n  const [sortReverse, setSortReverse] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const loadGoods = async () => {\n    setIsLoading(true);\n    setHasError(false);\n\n    try {\n      const data = await getTodos();\n\n      setTodos(data);\n      setIsLoaded(true);\n    } catch (err) {\n      setHasError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleSortButton = (field: SortFields) => {\n    const reverseStatus = (sortField === field) ? !sortReverse : false;\n\n    setSortField(field);\n    setSortReverse(reverseStatus);\n  };\n\n  const getSortField = (a: Todo, b: Todo) => {\n    const sortDirection = (sortReverse) ? -1 : 1;\n\n    switch (sortField) {\n      case SortFields.Id:\n        return (a.id as number) - (b.id as number) * sortDirection;\n\n      case SortFields.Name:\n        return (a.user.username).localeCompare(b.user.username) * sortDirection;\n\n      case SortFields.Title:\n        return (a.title).localeCompare(b.title) * sortDirection;\n\n      case SortFields.Completed:\n        return (Number(a.completed) - Number(b.completed)) * -sortDirection;\n\n      default:\n        return (a.id as number) - (b.id as number) * sortDirection;\n    }\n  };\n\n  const sortTodos = () => {\n    return [...todos].sort(getSortField);\n  };\n\n  const sortedTodos: Todo[] = sortTodos();\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title is-1\">List of TODOs</h1>\n        {!isLoading && !isLoaded && !hasError && (\n          <Button\n            text=\"Load ToDos\"\n            className=\"button\"\n            handleClick={loadGoods}\n          />\n        )}\n        {isLoading && <progress className=\"progress is-primary\" max=\"100\" />}\n        {hasError && (\n          <>\n            <div className=\"notification is-warning\">Something went wrong...</div>\n            <Button\n              text=\"Try Again\"\n              className=\"button\"\n              handleClick={loadGoods}\n            />\n          </>\n        )}\n        {isLoaded && (\n          <TodoList\n            todos={sortedTodos}\n            headers={HEADERS}\n            handleSortButton={handleSortButton}\n          />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}